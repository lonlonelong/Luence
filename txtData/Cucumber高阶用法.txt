一般而言，对于 OpenAPI 的测试通常采用 Google Chrome 的 PostMan 插件或者采用 Firefox 的 Poster 插件来手工调用，这样的测试方式对于简单的功能验证是可行的，但是对于返回值的验证也仅限于肉眼观察，对于返回内容的格式、数据类型等验证方面却有明显的不足。本文介绍了一种基于 Cucumber 和 RestAssured 来验证 OpenAPI 的方式，不但能够让参数变化一目了然，更能提供有效的返回值验证手段。关于 Cucumber 的认识和初级使用，请详见文章《Cucumber使用进阶》。
服务端开放 API 简介
所谓的开放 API 是服务型网站一种常见的应用，网站的服务商将自己的网站服务封装成一系列 API（Application Programming Interface，应用编程接口）开放出去，供第三方开发者使用，所开放的API就被称作 OpenAPI（开放API）。
本文中所涉及到的开放 API 主要实现了对数据的查询：根据卡号查询银行卡信息、分页获取满足条件的银行卡记录、查询银行卡对应的账单地址信息等。读者可以通过类 io.cucumber.samples.dw.controller.AppController 所提供的各个方法去逐个查看。后续行文中主要使用了一个开放 API：“/card/query”。
样例应用的实现和启动方式
本文中所述被测试应用是基于Spring boot实现，采用 Spring boot 可以加快开发和部署速度，加上 Spring boot 的快速启动方式，能够在开发环境中迅速启动并验证功能的实现是否符合预期设计。
功能实现
被测应用（样例应用）在功能上主要模拟现实的银行业务场景，简单实现了银行卡及其持卡人的信息管理。为了切合当前我们所介绍的测试方法，在实现业务的过程中主要关注了银行卡、持卡人信息的查询。对于文中所采用的被测 Open API，下文会给出详细的解释。
系统架构
在实现开放 API 功能的过程中，本文主要采用了如图 1 所示的架构，并使用主流的工具加以实现。
图 1. 系统架构图